--[[–°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è V1 –∫–º/—á, –≤—Ç–æ—Ä–æ–≥–æ ‚Äî V2 –∫–º/—á,
 —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏ S –∫–º. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏ —á–µ—Ä–µ–∑
 T —á–∞—Å–æ–≤, –µ—Å–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ –¥–≤–∏–∂—É—Ç—Å—è –Ω–∞–≤—Å—Ç—Ä–µ—á—É –¥—Ä—É–≥ –¥—Ä—É–≥—É.]]
 
function arifmetic(v1, v2, s1, t)
	s = math.abs(s1-(v1+v2)*t)
	return s
end

function read_data()	
	repeat
		if v1 <= 0 or nil then	
			print("–í–≤–µ–¥–∏—Ç–µ c–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è V1 –∫–º/—á?")
			v1 = tonumber(io.read())
		end
		if type(v1) ~= "number" then v1 = -1 end
		if v2 <= 0 or nil then
			print("–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ç–æ—Ä–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è V2 –∫–º/—á?")
			v2 = tonumber(io.read())
		end 
		if type(v2) ~= "number" then v2 = -1 end
	
	
		if s1 < 0 or nil then	
			print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–∞—è–Ω–∏–µ –º–µ–∂–¥—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏ –∫–º?")
			s1 = tonumber(io.read())
		end
		if type(s1) ~= "number" then s1= -1 end
		if t <= 0 or nil then	
			print("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è –∞–≤–æ–±–æ–º–∏–ª–µ–π T —á?")
			t = tonumber(io.read())
		end
		if type(t) ~= "number" then t = 0 end
	until v1>0 and v2>0 and s1>=0 and t>0
	return v1, v2, s1, t
end

do
	-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
	v1,v2,s1,t = 0,0,-1,0
	
	way = arifmetic(read_data())
	print("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏ —á–µ—Ä–µ–∑ "..t.." —á–∞—Å–æ–≤ —Å–æ—Å—Ç–∞–≤–∏—Ç = "..way.."–∫–º")
end 

-- –ó–∞–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ–ª—å.
--[[  v1 üöó__‚ûî___________s1_________________ü†î___üöó v2  ]]